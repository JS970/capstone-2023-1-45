rfft.cc:112:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) [with T = short int; void (* apply_func)(void*, const T*, Complex<T>*) = tflm_signal::RfftInt16Apply]	24	static
rfft.cc:112:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) [with T = long int; void (* apply_func)(void*, const T*, Complex<T>*) = tflm_signal::RfftInt32Apply]	24	static
rfft.cc:112:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) [with T = float; void (* apply_func)(void*, const T*, Complex<T>*) = tflm_signal::RfftFloatApply]	24	static
rfft.cc:180:14:TfLiteStatus tflite::{anonymous}::EvalAll(TfLiteContext*, TfLiteNode*)	0	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = unsigned char]	0	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = short unsigned int]	0	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = long unsigned int]	0	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = long long unsigned int]	0	static
rfft.cc:56:7:void* tflite::{anonymous}::Init(TfLiteContext*, const char*, size_t) [with T = short int; size_t (* get_needed_memory_func)(int32_t) = tflm_signal::RfftInt16GetNeededMemory; void* (* init_func)(int32_t, void*, size_t) = tflm_signal::RfftInt16Init]	40	static
rfft.cc:56:7:void* tflite::{anonymous}::Init(TfLiteContext*, const char*, size_t) [with T = long int; size_t (* get_needed_memory_func)(int32_t) = tflm_signal::RfftInt32GetNeededMemory; void* (* init_func)(int32_t, void*, size_t) = tflm_signal::RfftInt32Init]	40	static
rfft.cc:56:7:void* tflite::{anonymous}::Init(TfLiteContext*, const char*, size_t) [with T = float; size_t (* get_needed_memory_func)(int32_t) = tflm_signal::RfftFloatGetNeededMemory; void* (* init_func)(int32_t, void*, size_t) = tflm_signal::RfftFloatInit]	40	static
runtime_shape.h:67:11:int32_t tflite::RuntimeShape::Dims(int) const	8	static
runtime_shape.h:96:7:int tflite::RuntimeShape::FlatSize() const	8	static
rfft.cc:79:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*) [with T = short int; TfLiteType TfLiteTypeEnum = (TfLiteType)7]	104	static
rfft.cc:79:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*) [with T = long int; TfLiteType TfLiteTypeEnum = (TfLiteType)2]	112	static
rfft.cc:79:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*) [with T = float; TfLiteType TfLiteTypeEnum = (TfLiteType)1]	104	static
rfft.cc:161:14:TfLiteStatus tflite::{anonymous}::PrepareAll(TfLiteContext*, TfLiteNode*)	0	static
rfft.cc:203:19:TFLMRegistration* tflite::tflm_signal::Register_RFFT()	24	static
rfft.cc:209:19:TFLMRegistration* tflite::tflm_signal::Register_RFFT_FLOAT()	24	static
rfft.cc:218:19:TFLMRegistration* tflite::tflm_signal::Register_RFFT_INT16()	24	static
rfft.cc:227:19:TFLMRegistration* tflite::tflm_signal::Register_RFFT_INT32()	24	static
util.h:287:13:bool flatbuffers::StringToIntegerImpl(T*, const char*, int, bool) [with T = long long int]	32	static
flexbuffers.h:138:3:R flexbuffers::ReadSizedScalar(const uint8_t*, uint8_t) [with R = long long int; T1 = signed char; T2 = short int; T4 = long int; T8 = long long int]	0	static
flexbuffers.h:138:3:R flexbuffers::ReadSizedScalar(const uint8_t*, uint8_t) [with R = long long unsigned int; T1 = unsigned char; T2 = short unsigned int; T4 = long unsigned int; T8 = long long unsigned int]	0	static
flexbuffers.h:232:10:size_t flexbuffers::Sized::read_size() const	8	static
flexbuffers.h:877:18:flexbuffers::Reference flexbuffers::Map::operator[](const char*) const	56	static
flexbuffers.h:764:18:const uint8_t* flexbuffers::Reference::Indirect() const	8	static
flexbuffers.h:424:11:int64_t flexbuffers::Reference::AsInt64() const	24	static
rfft.cc:138:7:void* tflite::{anonymous}::InitAll(TfLiteContext*, const char*, size_t)	48	static
