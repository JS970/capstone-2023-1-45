squared_difference.cc:36:3:T tflite::{anonymous}::SquaredDifference(T, T) [with T = float]	0	static
squared_difference.cc:36:3:T tflite::{anonymous}::SquaredDifference(T, T) [with T = long int]	0	static
add.h:28:13:void tflite::reference_integer_ops::CheckArithmeticParams(const tflite::ArithmeticParams&)	8	static
squared_difference.cc:41:7:void* tflite::{anonymous}::SquaredDifferenceInit(TfLiteContext*, const char*, size_t)	8	static
squared_difference.cc:47:6:void tflite::{anonymous}::PrepareQuantized(const TfLiteQuantizationParams&, const TfLiteQuantizationParams&, const TfLiteQuantizationParams&, int, int32_t, int32_t, tflite::{anonymous}::OpData*)	48	static
squared_difference.cc:85:14:TfLiteStatus tflite::{anonymous}::SquaredDifferencePrepare(TfLiteContext*, TfLiteNode*)	56	static
runtime_shape.h:67:11:int32_t tflite::RuntimeShape::Dims(int) const	8	static
runtime_shape.h:96:7:int tflite::RuntimeShape::FlatSize() const	8	static
runtime_shape.h:109:3:tflite::RuntimeShape::RuntimeShape(int, const tflite::RuntimeShape&, int)	24	static
types.h:323:12:int tflite::MatchingFlatSize(const tflite::RuntimeShape&, const tflite::RuntimeShape&, const tflite::RuntimeShape&)	32	static
common.h:354:16:int32_t tflite::MultiplyByQuantizedMultiplierSmallerThanOneExp(int32_t, int32_t, int)	16	static
squared_difference.cc:157:3:T tflite::{anonymous}::SquaredDifference(T, T, const tflite::ArithmeticParams&) [with T = signed char]	16	static
squared_difference.cc:157:3:T tflite::{anonymous}::SquaredDifference(T, T, const tflite::ArithmeticParams&) [with T = short int]	16	static
squared_difference.cc:265:18:TFLMRegistration tflite::Register_SQUARED_DIFFERENCE()	16	static
common.h:46:6:bool tflite::ReduceDimensionsForBroadcast(const tflite::RuntimeShape&, const tflite::RuntimeShape&, size_t*, size_t*, size_t*) [with int MAX_DIM = 6]	112	static
add.h:75:13:void tflite::reference_integer_ops::BroadcastAddRecursiveDimensions(const tflite::ArithmeticParams&, int, size_t*, size_t*, size_t*, size_t*, size_t*, size_t*, const T*, const T*, T*, void (*)(const tflite::ArithmeticParams&), T (*)(T, T, const tflite::ArithmeticParams&)) [with T = signed char]	96	static
common.h:1128:22:void tflite::CopyDimsToDesc(const tflite::RuntimeShape&, tflite::NdArrayDesc<N>*) [with int N = 4]	24	static
common.h:1139:13:void tflite::NdArrayDescsForElementwiseBroadcast(const tflite::RuntimeShape&, const tflite::RuntimeShape&, tflite::NdArrayDesc<N>*, tflite::NdArrayDesc<N>*) [with int N = 4]	80	static
binary_function.h:30:13:void tflite::reference_ops::BroadcastBinaryFunction4DSlow(const tflite::RuntimeShape&, const T1*, const tflite::RuntimeShape&, const T2*, const tflite::RuntimeShape&, R*, R (*)(T1, T2)) [with R = float; T1 = float; T2 = float]	168	static
binary_function.h:30:13:void tflite::reference_ops::BroadcastBinaryFunction4DSlow(const tflite::RuntimeShape&, const T1*, const tflite::RuntimeShape&, const T2*, const tflite::RuntimeShape&, R*, R (*)(T1, T2)) [with R = long int; T1 = long int; T2 = long int]	168	static
add.h:75:13:void tflite::reference_integer_ops::BroadcastAddRecursiveDimensions(const tflite::ArithmeticParams&, int, size_t*, size_t*, size_t*, size_t*, size_t*, size_t*, const T*, const T*, T*, void (*)(const tflite::ArithmeticParams&), T (*)(T, T, const tflite::ArithmeticParams&)) [with T = short int]	96	static
squared_difference.cc:233:14:TfLiteStatus tflite::{anonymous}::SquaredDifferenceEval(TfLiteContext*, TfLiteNode*)	464	static
